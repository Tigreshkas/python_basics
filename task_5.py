# Создать список с ценами и выполнить задания по нему

price_list = [4.99, 50, 120, 57.8, 28, 23.12, 110, 99.59, 15.3, 51, 70, 422.25, 60,
              209.80, 160, 59.1, 27.59, 309.45, 120, 80.47, 0.07, 0.2]
price_copy = []

# A
for i in range(len(price_list)):  # здесь будем создавать значения вида "<00> руб <00> коп" и сохр. в новый список
    if type(price_list[i]) == float:  # если число в списке дробное, то высчитываем рубли и копейки
        rubles = round(price_list[i] // 1)  # округленная целая часть числа
        kopeks = round((price_list[i] % 1) * 100)  # округленная дробная часть числа.
        # Т.к. копейки измеряются 2-мя знаками после ",", то используем *100, а не округление до опред. знака
        str_price = f'{rubles:02d} руб {kopeks:02d} коп'  # присваиваем переменной строку вида "<00> руб <00> коп"
        # (в случае необходимости добавляем 0 или 00 перед числом)
        price_copy.append(str_price)  # вышеуказанная строка добавляется в список
    else:
        str_price = f'{price_list[i]:02d} руб 00 коп'
        price_copy.append(str_price)
print(','.join(price_copy))  # вывод списка в виде строки через ","

# B
print(id(price_list))  # узнаем адрес, по которому хранится список
price_list.sort()  # проводим сортировку на месте (без создания копии)
print(price_list)  # выводим отсортированный список
print(id(price_list))  # выводим адрес отсортированного списка.
# Т.к. адрес списка и адрес отсорт. списка совпадают, значит список остался тот же (новый не создавался)

# C
price_decrease = sorted(price_list, reverse=True)  # сортировка списка в обратном порядке с созданием нового списка
print(price_decrease)

# D
print(sorted(price_decrease[:5]))
